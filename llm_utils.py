"""
llm_utils.py

This module handles all interactions with the LLM to facilitate
dialogic, personalized English vocabulary and reading comprehension learning.

Functions include:
- Generating vocabulary prompts and hints
- Evaluating student answers for meaning accuracy
- Giving correct-answer praise messages
- Producing final explanations and scaffolded teaching content

Used throughout the system for all student-facing instructional messaging.
"""

from openai import OpenAI
import config
import sheet_utils

client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key=config.OPENROUTER_API_KEY,
)

# General system prompt for GrowTalk
system_prompt_reading = f"""你係一位用廣東話教 IELTS 英文嘅老師，語氣溫柔、鼓勵性強，擅長引導學生思考，並善用 Dialogic 教學法，包括使用「學術性互動說話技巧」（Academically Productive Talk）嚟幫助學生發展思維。

    你會使用以下互動策略（Talk Moves）：

    轉向與討論（Turn and Talk）：鼓勵學生先同身邊嘅同學分享諗法，建立自信。

    重述（Revoicing）：將學生講嘅嘢重述一遍，確認理解，幫助佢哋由口語過渡到更準確嘅英文。

    補充（Adding On）：鼓勵學生建立喺他人講法上再發展。

    推理與解釋（Reasoning）：引導學生講解點解佢咁諗，提出證據。

    修正思維（Revise Thinking）：鼓勵學生喺聽完其他人意見之後，反思自己原本嘅答案。

    你會以廣東話解釋 IELTS 考試入面嘅英文專業詞彙，例如：

    Noun (名詞)：指人、地方、事物或概念，例如 “book”, “happiness”。

    Skimming (略讀法)：快速讀文，搵出每段主旨句（topic sentence），了解大意。

    Scanning (尋讀法)：帶住問題快速搜尋文章內嘅關鍵字。

    Gist (大意 / 主旨)：文章主要想講乜。

    Topic Sentence (主題句)：通常係段落第一句，幫助理解整段重點。

    你會因應學生回應作出針對性提問或鼓勵，例如：

    「你可唔可以解釋多啲你點諗嘅？」

    「你同你拍檔講咗啲咩？可以分享一下？」

    「你改變咗諗法未？點解？」

    教學目標係幫助學生唔單止識做題目，更加理解語言背後嘅結構同邏輯，逐步建立閱讀策略，包括 Surveying、Skimming 同 Scanning。"""

system_prompt_vocab = f"""你係一位用廣東話教英文詞彙嘅 IELTS 老師，語氣溫柔、鼓勵性強，擅長透過「互動說話技巧」（Talk Moves）引導學生學新詞，唔止係記詞語，而係理解用法、造句同應用策略。

    你會使用以下互動式教學技巧：

    Revoicing（重述）：幫學生重述佢哋講過嘅意思，加強理解。

    Reasoning（推理）：引導學生解釋點解選擇呢個詞語，或者點樣從上下文推測意思。

    Turn and Talk（轉向與討論）：鼓勵學生先同拍檔交流，再用自己方式講一次。

    Revise Thinking（修正思維）：鼓勵學生根據新例子或解釋修正對詞義嘅理解。

    Adding On（補充）：引導學生講多啲，例如詞性、同義詞、常用搭配。

    你會以廣東話解釋英文詞彙，例如：

    Verb（動詞）：描述動作或狀態，例如 “run”, “believe”。

    Collocation（詞語搭配）：常見配搭，例如 “make a decision” 或 “heavy rain”。

    Root word（詞根）：詞語嘅基本形式，例如 “act” → “action”, “active”, “actor”。

    Context clues（語境提示）：根據句子其他字推測新詞意思。

    你會用問句引導學生，例如：

    「你覺得呢個字係形容詞定動詞？點解？」

    「你可以講一個用到呢個字嘅句子？」

    「你聽過類似嘅詞語未？有冇乜聯想？」

    教學目標係幫助學生學識用詞，而唔只係背詞。你會引導學生識得：

    猜詞義（from context）

    辨詞性（noun, verb, adjective）

    搭配使用（collocations）

    變化形（word forms）

    IELTS 常見高頻詞（academic word list）"""

"""
##############
GENERAL
##############
"""


def greet_student(student_name: str) -> str:
    """
    Generate a warm and encouraging greeting message to student

    The message introduces the student to today's training topic and invites the student to reply with "I'm ready"
    to begin.

    Parameters:
        student_name (str): Student name

    Returns:
        str: Cantonese greeting message generated by the LLM
    """

    prompt = (
        """請你以一位溫柔、有同理心、鼓勵學生嘗試嘅英文老師身份，向一班廣東話為母語嘅中學生發出一個溫暖邀請，鼓勵佢哋參加今日嘅英語練習時間。語氣要親切、有趣、具啟發性

        Student Name: {student_name}

        Sample: Hello {student_name}～👋
        今日我準備咗一個好輕鬆又實用嘅英文小練習😎

        🧡你準備好一齊挑戰今日嘅任務未？就算英文唔係你最好嗰科，只要你肯試，我哋就已經踏出咗重要一步啦！

        一齊加油，我等緊你～💪📚

        Keep it between 20-30 words

        No need to do translation into english, just keep the conversation in Cantonese 

        Require the student to reply "vocab" to start the vocab training when they are ready
        """
    ).format(student_name=student_name)

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {"role": "system", "content": system_prompt_vocab},
            {"role": "user", "content": prompt},
        ],
    )
    return response.choices[0].message.content


def evaluate_answer(user_answer: str, correct_answer: str) -> bool:
    """
    Return True or False
    Check whether the user's answer is correct, based on the meaning rather than exact wording.

    Parameters:
        user_answer (str): student's answer.
        correct_answer (str): model answer.

    Returns:
        bool: True if the LLM determines the answer is correct, else False.
    """
    prompt = f"""
    你係一位用廣東話教書嘅英文老師

    你而家要評估學生對某條問題嘅回答，睇下佢答得啱唔啱。

    ✅ 請你只用以下 JSON 格式回覆，不需要其他說明或解釋：

    {{
    "is_correct": true/false
    }}

    資料如下：

    💬 學生答案：
    {user_answer}

    📖 標準答案（意思方向）：
    {correct_answer}

    請小心分析語意，再判斷學生答法係咪接近正確。
    """

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {
                "role": "system",
                "content": system_prompt_vocab,
            },
            {"role": "user", "content": prompt},
        ],
    )

    reply = response.choices[0].message.content.strip()

    # Parse the JSON-like response
    try:
        if '"is_correct": true' in reply.lower():
            return True
        elif '"is_correct": false' in reply.lower():
            return False
        else:
            raise ValueError(f"Unexpected LLM response: {reply}")
    except Exception as e:
        print(f"⚠️ Failed to interpret LLM response: {reply}")
        raise e


def is_student_answering_question(user_reply: str, question_prompt: str) -> bool:
    """
    Uses LLM to determine whether the student is attempting to answer the actual question prompt.

    Parameters:
        user_reply (str): The student's message.
        question_prompt (str): The question the bot asked (e.g. '你知唔知道 "adapt" 嘅意思？').

    Returns:
        bool: True if the reply is a direct or indirect answer to the question, else False.
    """
    prompt = f"""
    你係一位用廣東話教英文嘅老師。

    你問學生：
    「{question_prompt}」

    而學生嘅回應係：
    「{user_reply}」

    請判斷一下學生嘅回答係唔係回應緊你問嘅問題？

    ✅ 如果佢嘅回答係直接回應緊你嘅問題嘅話 → 回覆：
    {{"answered": true}}

    ❌ 如果佢係回應緊另一樣嘢或者係問緊另一個問題嘅話（講笑、轉話題、無關提問）→ 回覆：
    {{"answered": false}}

    請只用 JSON 格式回覆，唔好加解釋。
    """

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {"role": "system", "content": system_prompt_reading},
            {"role": "user", "content": prompt},
        ],
    )

    reply = response.choices[0].message.content.lower()
    return '"answered": true' in reply


def is_reply_relevant_to_learning(user_reply: str, current_question: str) -> bool:
    """
    Uses LLM to determine whether the student's message is relevant to the learning task
    or English learning in general.

    Parameters:
        user_reply (str): The student's message.
        current_question (str): The current English learning prompt/question.

    Returns:
        bool: True if relevant to English learning, else False.
    """
    prompt = f"""
    你係一位用廣東話教英文嘅老師。

    學生啱啱回應咗一段訊息，你要判斷佢講嘅內容，係唔係同英文學習關。

    以下係你問佢嘅問題：
    「{current_question}」

    以下係學生嘅回應：
    「{user_reply}」

    請你判斷學生係咪：
    ✅ 正常回應問題、問英文問題、想學英文 → 回覆：{{"relevant": true}}
    ❌ 講其他無關話題（例如：煮飯、AI係咩、天氣、無厘頭）→ 回覆：{{"relevant": false}}

    e.g.: 想問吓book呢個字可唔可以轉做動詞？ is relevant
    e.g.: 想問吓英文裏面noun係乜嘢意思？ is relevant


    唔需要其他說明，只用 JSON 格式回覆。
    """

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {"role": "system", "content": system_prompt_vocab},
            {"role": "user", "content": prompt},
        ],
    )

    reply = response.choices[0].message.content.lower()
    return '"relevant": true' in reply


def generate_answer_to_student_question(user_question: str) -> str:
    """
    Use LLM to generate answer to student's english related question
    """

    prompt = f"""
    你係一位用廣東話教英文嘅老師。

    學生問咗一條有關英文學習嘅問題，請你用親切、簡單方式解答佢，並引導佢繼續返學習任務。

    問題：
    「{user_question}」

    請用廣東話回答，80–100 字內，唔好偏離主題太遠。
    """

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {"role": "system", "content": system_prompt_vocab},
            {"role": "user", "content": prompt},
        ],
    )

    return response.choices[0].message.content.strip()


"""
##############
READING EXERCISE
##############
"""


def generate_question_message(question: str, student_name: str = None) -> str:
    """
    Appends the provided question
    Uses the LLM to generate a warm Cantonese encouragement message

    Parameters:
        question (str): The comprehension question (unchanged in output).
        student_name (str, optional): The name of the student for personalization.

    Returns:
        str: A message to send to the student.
    """
    name_text = f"{student_name}～👋 " if student_name else ""

    prompt = f"""
        你係一位用廣東話教書嘅英文老師，性格溫柔、有同理心，擅長以親切語氣鼓勵學生投入閱讀理解任務。

        請寫一段 60–80 字嘅廣東話鼓勵語句，語氣可以加入 emoji，語言輕鬆溫暖，目標係令學生樂意回答問題。

        之後我會將老師寫嘅鼓勵句 + 問題送俾學生。

        No need to say hi to everyone in the encouragement message
        """

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {"role": "system", "content": system_prompt_reading},
            {"role": "user", "content": prompt},
        ],
    )

    encouragement = response.choices[0].message.content.strip()

    # Combine into final message
    full_message = f"""
    🧡 {name_text}{encouragement}

❓ *問題：*
{question.strip()}

請你根據上面嘅內容，試吓回答呢條問題～
"""
    return full_message.strip()


def give_hint_or_explanation(
    user_answer: str,
    correct_answer: str,
    question_text: str,
    passage: str,
    attempt: int,
) -> str:
    """
    Only call when the answer is incorrect
    Provides hint or explanation based on the number of attempts.

    Parameters:
        user_answer (str): The student's response.
        correct_answer (str): The expected answer.
        question_text (str): The original question.
        attempt (int): Current attempt (1–3)

    Logic:
        Attempt	Bot Response Type	Purpose
        1st attempt	- Minor hint > Encourage thinking, low pressure
        2nd attempt	- Stronger hint	> Guide toward key concept
        3rd attempt	- Reveal + explain > Give correct answer with explanation, invite reflection

    Returns:
        str: Cantonese feedback message (hint or explanation)
    """
    if attempt < 1 or attempt > 3:
        raise ValueError("Attempt must be between 1 and 3")

    if attempt == 3:
        tone = "溫柔而清楚"
        task = f"""學生已經試咗三次都未答啱。請你提供正確答案「{correct_answer}」，並簡單解釋一下點解係呢個答案，盡量用學生易明嘅方式講解。"""
    elif attempt == 2:
        tone = "進一步鼓勵"
        task = f"""請你唔好話答案，但可以指出關鍵提示或線索，引導學生諗到答案，幫佢縮窄方向。"""
    else:  # attempt == 1
        tone = "輕鬆鼓勵"
        task = f"""請你只給一個好細微、唔太明顯嘅提示，幫學生自己再諗諗，唔好直接話出重點。"""

    prompt = f"""
        你係一位用廣東話教英文嘅老師。

        學生嘗試咗答一條問題：
        文章：{passage}
        問題：{question_text}
        學生答案：{user_answer}
        標準答案：{correct_answer}

        請你用{tone}語氣，{task}

        請用 100-200 字內廣東話回答。
        """

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {
                "role": "system",
                "content": system_prompt_reading,
            },
            {"role": "user", "content": prompt},
        ],
    )

    return response.choices[0].message.content.strip()


def ask_why_correct(question_text: str, user_answer: str, passage: str) -> str:
    """
    Only call when the answer is incorrect
    Asking the student to reflect on why they chose their (correct) answer.

    Parameters:
        question_text (str): The original question.
        user_answer (str): The student's correct answer.
        passage (str): The passage content for context.

    Returns:
        str: Cantonese prompt asking the student for reflection.
    """
    prompt = f"""
        你係一位用廣東話教英文嘅老師。

        學生啱啱答啱咗一條問題，你想邀請佢講吓佢點解會咁答，鼓勵佢反思自己嘅思考過程。

        你要根據以下資料，用一個輕鬆、親切、鼓勵性嘅語氣問佢：
        - 你點解會咁答？
        - 有冇邊句令你特別有感覺？
        - 如果你用自己說法，可以點解釋？

        問題：{question_text}
        學生答案：{user_answer}
        文章：{passage}

        請用 80–150 字廣東話回應。
        """

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {
                "role": "system",
                "content": system_prompt_reading,
            },
            {"role": "user", "content": prompt},
        ],
    )

    return response.choices[0].message.content.strip()


def respond_to_reflection(
    reflection_text: str, question_text: str, correct_answer: str, passage: str
) -> str:
    """
    Generates a response to a student's reflective answer (e.g., "why did you choose that?"),
    providing affirmation, insight, and constructive support in Cantonese.

    Parameters:
        reflection_text (str): The student's explanation or reflection.
        question_text (str): The original question.
        correct_answer (str): The model answer.
        passage (str): The relevant passage text.

    Returns:
        str: A warm Cantonese reply affirming and engaging with the student’s reasoning.
    """
    prompt = f"""
你係一位用廣東話教英文嘅老師。

學生啱啱回答咗你之前問佢：「你點解會咁答呢？」依家佢分享咗佢嘅諗法。

請你根據佢嘅回應，用親切、鼓勵、對話式嘅語氣：
1. 肯定佢願意分享自己嘅想法
2. 評價佢嘅解釋，指出有深度／創意／邏輯性
3. 如果佢有啲細節未掌握，可以輕輕指出並補充
4. 可以引用文章一小句作佐證

請用 80–150 字廣東話回應。

📝 學生回應：{reflection_text}
❓ 原問題：{question_text}
✅ 標準答案：{correct_answer}
📖 文章：{passage}
"""

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {
                "role": "system",
                "content": system_prompt_reading,
            },
            {"role": "user", "content": prompt},
        ],
    )

    return response.choices[0].message.content.strip()


def respond_to_open_answer(user_answer: str, question_text: str) -> str:
    prompt = f"""
你係一位用廣東話教閱讀理解嘅英文老師。

學生回應咗一條開放式問題。你要用鼓勵、反思式語氣回應：
- 肯定佢嘅諗法
- 回應佢內容（可以引用部分回答）
- 鼓勵佢再思考一層（例如：你覺得如果係你會點做？）

📝 問題：{question_text}
💬 學生回應：{user_answer}

請用 80–120 字廣東話回答。
"""
    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {"role": "system", "content": system_prompt_reading},
            {"role": "user", "content": prompt},
        ],
    )

    return response.choices[0].message.content.strip()


"""
##############
VOCAB EXERCISE
##############
"""


def ask_vocab_meaning_question(vocab_row: dict) -> str:
    """
    Generate message asking the student if they know the meaning of a vocabulary word.

    Parameters:
        vocab_row (dict): A single vocab record (from the vocab sheet).

    Returns:
        str: Cantonese prompt asking if the student knows the word meaning.
    """
    vocab = vocab_row["Vocabulary"]
    part_of_speech = vocab_row["PartOfSpeech"]

    prompt = f"""
        你係一位用廣東話教英文單字嘅老師，擅長用鼓勵性、親切方式引導學生。

        請你幫我撰寫一段訊息，語氣溫柔有趣，鼓勵學生回答以下問題：

        「你知唔知道 “{vocab}” 呢個字嘅意思係咩？」

        請鼓勵學生唔洗驚講錯，可以自由估下，唔需要給提示、例句或解釋。
        唔需要同同學打招呼，直接問問題就可以了

        請用 30-40 字廣東話回應。

        template 1: "我哋嚟學個新字「pasture」啦。你知唔知道呢個 noun 嘅意思係咩呀？唔洗怕講錯，隨心所欲估下，只要你肯諗就得㗎！試下話俾我聽啦！😊"
        template 2: "見到你咁積極想學新詞，我好開心呀！等我問你一個問題啦，放輕鬆，自由啲估下就得！你知唔知道 “pasture” 呢個 noun 嘅意思係咩？ 唔怕講錯，盡情分享你嘅想法啦！😊"
        """

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {
                "role": "system",
                "content": system_prompt_vocab,
            },
            {"role": "user", "content": prompt},
        ],
    )

    return response.choices[0].message.content.strip()


def give_vocab_correct_reply(vocab_row: dict) -> str:
    """
    Generate a Cantonese message that praises the student
    for answering a vocabulary word correctly and reinforces the meaning.

    Parameters:
        vocab_row (dict): The vocabulary entry that was just answered correctly.

    Returns:
        str: A warm and encouraging message in Cantonese.
    """
    vocab = vocab_row["Vocabulary"]
    part_of_speech = vocab_row["PartOfSpeech"]
    meaning_zh = vocab_row["ChineseExplaination"]
    example = vocab_row["Examples"]
    root = vocab_row["Roots"]
    mem_story = vocab_row["MemStories"]

    prompt = f"""
你係一位用廣東話教英文單字嘅老師。

學生啱啱成功回答咗 “{vocab}” 呢個 {part_of_speech} 嘅意思。

請你撰寫一段 60–100 字左右嘅訊息：
1. 稱讚學生
2. 肯定佢答啱咗，並重申意思係「{meaning_zh}」
3. 可以提一提例句：「{example}」或記憶法：「{mem_story}」
4. 可以解釋一下詞根：{root}
4. 繼續挑戰下一個字

請用親切、鼓勵、自然嘅語氣回覆。只用廣東話，不要英文解釋。
避免使用性別字彙 e.g. 叻女/叻仔
"""

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {
                "role": "system",
                "content": system_prompt_vocab,
            },
            {"role": "user", "content": prompt},
        ],
    )

    return response.choices[0].message.content.strip()


def give_vocab_hint_or_explanation(vocab_row: dict, attempt: int) -> str:
    """
    Uses LLM to provide either a hint (first attempt) or a full explanation
    (second attempt) for a vocabulary word, based on student progress.

    Parameters:
        vocab_row (dict): The vocabulary entry for today.
        attempt (int): Attempt number (1 or 2).

    Returns:
        str: A friendly Cantonese teaching message.
    """
    vocab = vocab_row["Vocabulary"]
    part_of_speech = vocab_row["PartOfSpeech"]
    example = vocab_row["Examples"]
    meaning_zh = vocab_row["ChineseExplaination"]
    tip = vocab_row["Tips"]
    root = vocab_row["Roots"]
    mem_story = vocab_row["MemStories"]

    if attempt not in [1, 2]:
        raise ValueError("Attempt must be either 1 or 2.")

    if attempt == 1:
        tone = "輕鬆鼓勵"
        task = f"""
            學生第一次答錯，請你：
            1. 重提呢個例句：{example}
            2. 用親切語氣引導佢再估一次
            3. 可加輕微提示（例如：你可以諗吓「{tip}」）
            4. 唔好直接講答案或解釋

            template 1: 唔緊要呀，第一次唔啱係好正常㗎！等我哋一齊睇下一句句子：Cows graze in the green pasture. 諗吓個句子係講咩嘅呢？牛牛喺邊度食草呢？ 你再試吓估下 "pasture" 嘅意思，唔使怕講錯
            """
    else:
        tone = "溫柔解釋"
        task = f"""
            學生第二次都未估中，請你：
            1. 告訴佢 “{vocab}” 呢個 {part_of_speech} 嘅中文意思係：{meaning_zh}
            2. 引用記憶故事：「{mem_story}」
            3. 可以解釋一下詞根：{root}
            4. 鼓勵佢記住單字，並邀請佢繼續前往下一個詞彙
            """

    prompt = f"""
        你係一位用廣東話教英文單字嘅老師。

        學生學緊 “{vocab}” 呢個 {part_of_speech}，但未掌握意思。

        {task}

        請用 {tone} 嘅語氣，用廣東話寫一段自然、鼓勵性教學訊息。
        """

    response = client.chat.completions.create(
        model="google/gemma-3-27b-it",
        messages=[
            {
                "role": "system",
                "content": system_prompt_vocab,
            },
            {"role": "user", "content": prompt},
        ],
    )

    return response.choices[0].message.content.strip()
